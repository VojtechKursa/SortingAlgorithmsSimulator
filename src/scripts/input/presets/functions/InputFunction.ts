import { InputPreset } from "../InputPreset";
import { InputParameter } from "../../parameters/InputParameter";
import { NumberParameter, RoundBehavior } from "../../parameters/NumberParameter";

/**
 * An input preset for generating an algorithm input based on a function.
 */
export abstract class InputFunction implements InputPreset {
	/**
	 * The parameters of the input function.
	 */
	protected parameters: InputParameter[];

	/**
	 * The length parameter of the input that is to be generated by the function.
	 */
	protected lengthParameter: NumberParameter;

	protected constructor(
		public readonly name: string
	) {
		this.lengthParameter = new NumberParameter("length", "Length", 10, true, 0, undefined, 1, RoundBehavior.Round);
		this.parameters = [this.lengthParameter];
	}

	public createForm(parametersDiv: HTMLDivElement, loadButton: HTMLButtonElement): void {
		this.parameters.forEach(parameter => parameter.createForm(parametersDiv, loadButton));
	}

	public onClear(): void {
		this.parameters.forEach(parameter => {
			parameter.onClear();
		});
	}

	public abstract getArray(): number[];
}