@use "common";

:root {
	--color-code-line_active: rgba(255, 255, 0, 0.5);
}

select {
	margin-top: 4px;
}

.btn-group output {
	text-align: center;
	align-content: center;
}

.control_module {
	@include common.margin-vertical();

	display: flex;
	width: 100%;

	* {
		min-height: 100%;
	}

	> * {
		min-width: max-content;
	}
}

.continuous_control {
	display: flex;
	align-items: center;
	justify-content: center;
	flex-direction: row;
	flex-wrap: wrap;

	margin-bottom: 0.5em;

	& > * {
		width: fit-content;
		
		@include common.pad-vertical(0.5em);
		@include common.pad-horizontal(calc(var(--bs-gutter-x) / 2));
	}

	.period_container {
		label[for="player_control_period"] {
			padding-right: 0.25em;
		}

		input {
			width: 3em;
		}
	}

	.radio_buttons_wrapper {
		display: flex;
		flex-direction: row;
		flex-wrap: wrap;
		align-content: center;

		& > div {
			padding-left: 1em;

			&:first-of-type {
				padding-left: 0;
			}
	
			label {
				margin-left: 0.5em;
			}
		}
	}
}

.input_parameter_module {
	.input_wrapper {
		display: flex;

		label {
			width: 100px;

			margin-right: 1em;
		}

		input {
			flex-grow: 1;
		}
	}
}

.hide_wrapper {
	display: flex;
	flex-flow: row;

	& > button {
		display: flex;
		flex-flow: row;

		align-items: center;
		justify-content: space-evenly;

		text-orientation: upright;
		writing-mode: vertical-lr;

		background-color: grey;

		border: none;

		@include common.pad-horizontal(0.5rem);

		i {
			@include common.margin-vertical(1em);

			&::before {
				content: "\f22d";
			}
		}

		span::before {
			content: "Show ";
		}

		&[aria-expanded="true"] {
			i::before {
				content: "\f231";
			}

			span::before {
				content: "Hide ";
			}
		}
	}
}

body.vertical {
	#row_main {
		display: block;
	}
}

#navbar {
	display: flex;

	@include common.margin-vertical(8px);

	#settings_button_wrapper {
		width: fit-content;

		@extend .right-align;
	}
}

#row_main {
	$border: 2px solid black;

	display: flex;
	flex-flow: row;

	border: $border;
	text-align: center;

	#col_renderer {
		flex-grow: 1;

		display: flex;
		flex-flow: column;

		@include common.pad-horizontal(calc(var(--bs-gutter-x) / 2));

		@media (max-width: 991px) {
			height: fit-content;
			border-bottom: $border;
		}
		@media (min-width: 992px) {
			border-right: $border;
		}

		#canvas_wrapper {
			width: 100%;
			flex-grow: 1;

			align-content: start;
		}

		#step_description {
			height: fit-content;
			min-height: 3.5em;

			align-content: center;

			$margin: 0.25em;

			@include common.margin-vertical($margin);
			@include common.margin-horizontal(calc(-0.5 * var(--bs-gutter-x) + $margin));

			border: 2px solid green;
		}
	}

	#col_debugger_wrapper {
		&:has(#col_debugger:not(.collapse-horizontal)) {
			flex-direction: column;

			& > button {
				writing-mode: horizontal-tb;

				@include common.pad-vertical(0.5em);
				@include common.pad-horizontal(0);

				i {
					@include common.margin-vertical(0);
					@include common.margin-horizontal(1em);

					&::before {
						content: "\f235";
					}
				}

				&[aria-expanded="false"] {
					i::before {
						content: "\f229";
					}
				}
			}
		}

		#col_debugger {
			flex-grow: 1;

			padding-left: calc(var(--bs-gutter-x) / 2);

			#debugger_row {
				display: flex;
				flex-direction: row;

				#debugger_wrapper {
					flex-grow: 1;

					padding-right: calc(var(--bs-gutter-x) / 2);

					#debugger {
						color: white;
						background-color: black;

						text-align: left;
						align-content: center;

						.code-line {
							display: grid;
							grid-template-columns: 3em auto;

							font-family: monospace;

							.code-header {
								grid-column: 1;

								background-color: grey;

								text-align: right;
								padding-right: 0.5em;

								user-select: none; /* Make the text un-selectable */
							}

							.code-text {
								grid-column: 2;

								padding-left: 0.5em;
								white-space: pre;
							}
						}

						.code-line_active {
							background-color: var(--color-code-line_active);
						}
					}
				}

				#variable_watch_wrapper {
					@include common.pad-horizontal();

					#variable_watch {
						thead {
							background-color: green;
						}

						td {
							border: 2px solid black;
						}

						#variable_watch_body {
							.variable_watch-row {
								&:nth-child(odd) {
									background-color: grey;
								}
							}
						}
					}
				}

				#call_stack_wrapper {
					@include common.pad-horizontal();

					#call_stack {
						thead {
							background-color: green;
						}

						td {
							border: 2px solid black;
						}

						tbody {
							tr {
								&:nth-child(odd) {
									background-color: grey;
								}

								td > div > div {
									display: flex;
									justify-content: space-evenly;
								}
							}
						}
					}
				}
			}
		}
	}
}

#row_simulator_controls {
	display: flex;
	justify-content: space-between;

	margin-top: 1em;

	min-width: fit-content;

	button {
		@include common.margin-horizontal(1em);

		width: 100%;
		max-width: 250px;
		min-width: fit-content;

		height: 50px;

		&:first-child {
			margin-left: 0;
		}

		&:last-child {
			margin-right: 0;
		}
	}
}

#dialog_input {
	#dialog_input-method_area {
		@include common.margin-vertical(2em);

		label {
			width: 100px;

			margin-right: 1em;
		}

		> div {
			margin-top: 1em;

			&:first-child {
				margin-top: 0;
			}

			div {
				margin-top: 0.5em;

				&:first-child {
					margin-top: 0;
				}
			}
		}
	}
}

.dialog_buttons {
	display: flex;
	flex-flow: row;

	button {
		width: 100%;

		@include common.margin-horizontal(0.5em);

		&:first-child {
			margin-left: 0;
		}

		&:last-child {
			margin-right: 0;
		}
	}
}
